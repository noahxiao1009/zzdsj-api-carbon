name: Manual Multi-Platform Docker Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Image tag (e.g., latest, v1.0.0)'
        required: true
        default: 'latest'
        type: string

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for core image
        id: meta_core
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/common_ground_core
          tags: |
            type=raw,value=${{ inputs.version }}
            type=sha,prefix=

      - name: Build and push core image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_core.outputs.tags }}
          labels: ${{ steps.meta_core.outputs.labels }}

      - name: Extract metadata for bridge image
        id: meta_bridge
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/gemini-cli-mcp-openai-bridge
          tags: |
            type=raw,value=${{ inputs.version }}
            type=sha,prefix=

      - name: Build and push bridge image
        uses: docker/build-push-action@v6
        with:
          context: ./deployment/gemini-cli-mcp-openai-bridge
          file: ./deployment/gemini-cli-mcp-openai-bridge/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_bridge.outputs.tags }}
          labels: ${{ steps.meta_bridge.outputs.labels }}